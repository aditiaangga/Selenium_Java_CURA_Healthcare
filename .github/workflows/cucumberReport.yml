name: Cucumber Tests

on:
  workflow_dispatch:
    inputs:
      browser:
        description: 'Browser'
        required: true
        default: 'chrome'
        type: choice
        options:
          - chrome
          - safari

jobs:
  test:
    runs-on: macos-latest

    steps:
      - name: Log Start Time (WIB) on macOS
        run: |
            export TZ=Asia/Jakarta
            FORMATTED_TIME=$(date -j -f "%Y-%m-%d %H:%M:%S" "$(date +"%Y-%m-%d %H:%M:%S")" +"%A, %e %B %Y - %H:%M:%S WIB")
            echo "Job started at $FORMATTED_TIME"

      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'
      
      - name: Check Browser versions
        run: |
              echo "Chrome:"
              if [ -e "/Applications/Google Chrome.app/Contents/MacOS/Google Chrome" ]; then
                "/Applications/Google Chrome.app/Contents/MacOS/Google Chrome" --version
              else
                echo "Google Chrome tidak ditemukan"
              fi
              
              echo "Firefox:"
              which firefox && firefox --version || echo "Firefox tidak ditemukan"
              
              echo "Edge:"
              if [ -e "/Applications/Microsoft Edge.app/Contents/MacOS/Microsoft Edge" ]; then
                "/Applications/Microsoft Edge.app/Contents/MacOS/Microsoft Edge" --version
              else
                echo "Microsoft Edge tidak ditemukan"
              fi

              echo "Safari:"
              which safari && safari --version 2>/dev/null || echo "Safari tidak mendukung perintah --version"

              echo "SafariDriver:"
              which safaridriver && safaridriver --version || echo "SafariDriver tidak ditemukan"

              echo "ChromeDriver:"
              which chromedriver && chromedriver --version || echo "ChromeDriver tidak ditemukan"

              echo "GeckoDriver:"
              which geckodriver && geckodriver --version || echo "GeckoDriver tidak ditemukan"

              echo "EdgeDriver:"
              which msedgedriver && msedgedriver --version || echo "EdgeDriver tidak ditemukan"

              # echo "Chrome:"
              # which google-chrome && google-chrome --version

              # echo "Firefox:"
              # which firefox && firefox --version

              # echo "Edge:"
              # which microsoft-edge && microsoft-edge --version

              # echo "Safari:"
              # which safari && safari --version

              # echo "ChromeDriver:"
              # which chromedriver && chromedriver --version

              # echo "GeckoDriver:"
              # which geckodriver && geckodriver --version

              # echo "EdgeDriver:"
              # which msedgedriver && msedgedriver --version  
              
              # echo "SafariDriver:"
              # which safaridriver && safaridriver --version 

      - name: Enable Safari Remote Automation
        if: runner.os == 'macOS' && github.event.inputs.browser == 'safari'
        run: |
          sudo safaridriver --enable
          defaults write com.apple.Safari AllowRemoteAutomation -bool true
          sudo killall safaridriver || true 

      - name: Verify Safari Remote Automation
        if: runner.os == 'macOS' && github.event.inputs.browser == 'safari'
        run: |
          defaults read com.apple.Safari AllowRemoteAutomation

      - name: Restart SafariDriver
        if: runner.os == 'macOS' && github.event.inputs.browser == 'safari'
        run: |
          sudo pkill -f safaridriver || true
          sleep 2
          sudo safaridriver -p 4444 > safaridriver.log 2>&1 &
          sleep 3
          cat safaridriver.log

      - name: Check SafariDriver Status
        if: runner.os == 'macOS' && github.event.inputs.browser == 'safari'
        run: |
          ps aux | grep safaridriver || echo "SafariDriver is not running"
          curl -s http://localhost:4444/status || echo "SafariDriver is not responding"    

              
      - name: Run Cucumber Tests ${{ github.event.inputs.browser }}
        run: mvn clean verify -Dbrowser=${{ github.event.inputs.browser }}

      - name: Upload Cucumber Reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: cucumber-report
          path: target/cucumber-html-reports

      - name: Upload Generated Artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: generated-artifacts
          path: target
