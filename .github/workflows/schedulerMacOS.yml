name: Cucumber Tests Scheduler MacOS

on:
  schedule:
    - cron: '0 17,1,9 * * *'
  push:
    branches:
      - macos

jobs:
  test:
    runs-on: macos-latest
    strategy:
      matrix:
        browser: [chrome, safari]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          ref: macos 

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Check Browser versions
        run: |
              echo "Chromedriver:"
              which chromedriver 
              chromedriver --version  

              # echo "Geckodriver:"
              # which geckodriver
              # geckodriver --version  

              # echo "MSEdgeDriver:"
              # which msedgedriver
              # msedgedriver --version  

              echo "SafariDriver:"
              which safaridriver
              safaridriver --version 

      - name: Enable Safari Remote Automation
        if: runner.os == 'macOS' && matrix.browser == 'safari'
        run: |
          sudo safaridriver --enable
          defaults write com.apple.Safari AllowRemoteAutomation -bool true
          sudo killall safaridriver || true 

      - name: Verify Safari Remote Automation
        if: runner.os == 'macOS' && matrix.browser == 'safari'
        run: |
          defaults read com.apple.Safari AllowRemoteAutomation

      - name: Restart SafariDriver
        if: runner.os == 'macOS' && matrix.browser == 'safari'
        run: |
          sudo pkill -f safaridriver || true
          sleep 2
          sudo safaridriver -p 4444 > safaridriver.log 2>&1 &
          sleep 3
          cat safaridriver.log

      - name: Check SafariDriver Status
        if: runner.os == 'macOS' && matrix.browser == 'safari'
        run: |
          ps aux | grep safaridriver || echo "SafariDriver is not running"
          curl -s http://localhost:4444/status || echo "SafariDriver is not responding" 

      - name: Run Cucumber Tests on ${{ matrix.browser }}
        run: mvn clean verify -Dbrowser=${{ matrix.browser }}

      - name: Upload Cucumber Reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: cucumber-report-${{ matrix.browser }}
          path: target/cucumber-html-reports

      - name: Upload Generated Artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: generated-artifacts-${{ matrix.browser }}
          path: target
